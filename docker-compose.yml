version: '3'

networks:
  nginx-php74-mysql8-node:

services:

  # nginx
  nginx-service:
    image: nginx:stable-alpine
    container_name: nginx-container
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./backend:/var/www/books-app-symfony
      - ./frontend:/var/www/books-app-angular
    depends_on:
      - mysq8-service
      - php74-service
    networks:
      - nginx-php74-mysql8-node
  # php
  php74-service:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: php74-container
    ports:
      - "9000:9000"
    volumes:
      - ./backend:/var/www/books-app-symfony
    networks:
      - nginx-php74-mysql8-node
  # mysql
  mysq8-service:
    image: mysql:8
    container_name: mysql8-container
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
    networks:
      - nginx-php74-mysql8-node
  # node
#  node-service:
#    image: node:latest
#    container_name: node-container
#    working_dir: /var/www/books-app-angular
#    build:
#      context: .
#      dockerfile: ./frontend/Dockerfile
#    volumes:
#      - ./frontend:/var/www/books-app-angular
#    networks:
#      - nginx-php74-mysql8-node
