version: '3'

networks:
  nginx-php74-mysql8:

services:

  # nginx
  nginx-service:
    image: nginx:latest
    container_name: nginx-container
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/default.conf:/etc/nginx/default.conf
      - ./backend:/var/www/books-app-symfony
      - ./frontend:/var/www/books-app-angular
    depends_on:
      - mysql8-service
      - php74-service
    networks:
      - nginx-php74-mysql8
  # php
  php74-service:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: php74-container
    ports:
      - "9000:9000"
    networks:
      - nginx-php74-mysql8
    volumes:
      - ./backend:/var/www/books-app-symfony
  # mysql
  mysql8-service:
    image: mysql:8
    container_name: mysql8-container
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
    networks:
      - nginx-php74-mysql8

  phpmyadmin-service:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-container
    links:
      - mysql8-service
    depends_on:
      - mysql8-service
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
      PMA_HOST: mysql8-service
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - 8081:80
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - nginx-php74-mysql8
